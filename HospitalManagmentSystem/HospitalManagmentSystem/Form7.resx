<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hnrFiDA5YsWIP//Z
</value>
  </data>
</root>